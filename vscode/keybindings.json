[
    // Semantic pane splitting
    // - Use control+| to split panes vertically
    // - Use control+- to split panes horizontally
    {
        "key": "ctrl+shift+\\",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl--",
        "command": "workbench.action.splitEditorOrthogonal"
    },

    // Vim-style navigation between editor groups
    // - Use control+h to focus the editor group on the left
    // - Use control+j to focus the editor group on the left
    // - Use control+k to focus the editor group on the left
    // - Use control+l to focus the editor group on the left
    {
        "key": "ctrl-h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl-j",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl-k",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl-l",
        "command": "workbench.action.focusRightGroup"
    },

    // Use control+g j to go down to the next change
    // Use control+g k to go up to the previous change
    {
        "key": "ctrl+g j",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+g k",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },

    // Explorer: Use command+\ to show/hide the explorer sidebar
    {
        "key": "cmd+\\",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "activeViewlet != 'workbench.view.explorer'"
    },
    {
        "key": "cmd+\\",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet = 'workbench.view.explorer'"
    },

    // Explorer: Use d to duplicate file
    {
        "key": "d",
        "command": "fileutils.duplicateFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },

    // Explorer: Use m to rename file
    {
        "key": "m",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },

    // Panel: Use control-p to show/hide the panel (i.e., the terminal, the debug console, etc.)
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.togglePanel"
    },

    // Panel: Use control-shift-p to toggle the maximized panel
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.toggleMaximizedPanel"
    },

    // SCM: Use control+9 to show/hide the SCM sidebar
    {
        "key": "ctrl+9",
        "command": "workbench.view.scm",
        "when": "activeViewlet != 'workbench.view.scm'"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet == 'workbench.view.scm'"
    },

    // SCM Workbench: Use command+enter to stage selected changes in the diff view
    {
        "key": "cmd+enter",
        "command": "git.stageSelectedRanges",
        "when": "activeViewlet == 'workbench.view.scm'"
    },

    // SCM Workbench: Use command+enter to commit after typing commit message
    {
        "key": "cmd+enter",
        "command": "git.commit",
        "when": "activeViewlet == 'workbench.view.scm' && !isInDiffEditor"
    },

    // Use standard macOS tab navigation to go to previous/next "tabs" in the panel
    {
        "key": "cmd+shift+[",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    {
        "key": "cmd+shift+]",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },

    // Use alt+command+down to go to definition
    // Use alt+command+up to go back
    {
        "key": "alt+cmd+down",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+cmd+up",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    },

    // Miscellaneous core customizations
    {
        "key": "cmd+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "cmd+k cmd+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "cmd+k cmd+l",
        "command": "editor.action.transformToLowercase"
    },

    // Miscellaneous extension customizations
    {
        "key": "alt+d",
        "command": "-markdown.todo.toggleDone",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+i",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+d",
        "command": "markdown.extension.checkTaskList",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "alt+c",
        "command": "-markdown.extension.checkTaskList",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "alt+g c",
        "command": "extension.gitHubUrlPerma",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+l c",
        "command": "-extension.gitHubUrlPerma",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+g o",
        "command": "openInGitHub.openFile"
    },
    {
        "key": "alt+g b",
        "command": "openInGitHub.openFileBlame"
    },
    {
        "key": "alt+g h",
        "command": "openInGitHub.openFileHistory"
    },
]
