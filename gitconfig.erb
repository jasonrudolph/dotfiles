[user]
  name = <%= print("Your Name: "); STDOUT.flush; STDIN.gets.chomp %>
  email = <%= print("Your Email: "); STDOUT.flush; STDIN.gets.chomp %>
  initials = <%= print("Your Initials: "); STDOUT.flush; STDIN.gets.chomp %>
[alias]
  co = checkout
  ci = commit
  st = status
  ch = cherry -v origin
  br = branch

  # show difference between the HEAD and the index
  staged = diff --cached

  # show difference between working tree and the index
  unstaged = diff

  # show staged and unstaged changes (what would be committed with "git commit -a")
  both = diff HEAD

  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an, %cr)%Creset' --abbrev-commit --date=relative

  lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an, %cr)%Creset' --abbrev-commit --date=relative --all

  # Rename [branch] to z-[branch]
  #
  # Useful for renaming old branches (that you're not yet ready to delete) in a
  # way that puts them at the bottom of the list when you run `git branch`
  #
  # Credit: http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/#rename_branch_to_donebranch
  z = "!f() { git branch | grep "$1" | cut -c 3- | grep -v z- | xargs -I{} git branch -m {} z-{}; }; f"
[color]
  diff = auto
  status = auto
  branch = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[merge]
  tool = opendiff
[core]
  excludesfile = <%= ENV['HOME'] %>/.gitignore
  autocrlf = input
  legacyheaders = false
  editor = vim
  pager = less -ce3MR
[repack]
  usedeltabaseoffset = true
[apply]
  whitespace = nowarn
[format]
  pretty = %C(yellow)%h%Creset %s %C(red)(%an, %cr)%Creset
[github]
  user = <%= print("GitHub Username: "); STDOUT.flush; STDIN.gets.chomp %>
  token = <%= print("GitHub API Token: "); STDOUT.flush; STDIN.gets.chomp %>
[push]
  default = tracking
[diff "ruby"]
  funcname = ^ *\\(\\(class\\|module\\|def\\) .*\\)
