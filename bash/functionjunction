#!/usr/bin/env bash

# Welcome to Function Junction: home of useful functions

# echo the given command and then run it
echo_and_run() {
  echo "üê≥  $@"
  eval "$@"
}

# Credit: https://gist.github.com/1321338
function extract {
  echo Extracting $1 ...
  if [ -f $1 ] ; then
      case $1 in
          *.tar.bz2)   tar xjf $1  ;;
          *.tar.gz)    tar xzf $1  ;;
          *.bz2)       bunzip2 $1  ;;
          *.rar)       rar x $1    ;;
          *.gz)        gunzip $1   ;;
          *.tar)       tar xf $1   ;;
          *.tbz2)      tar xjf $1  ;;
          *.tgz)       tar xzf $1  ;;
          *.zip)       unzip $1   ;;
          *.Z)         uncompress $1  ;;
          *.7z)        7z x $1  ;;
          *)        echo "'$1' cannot be extracted via extract()" ;;
      esac
  else
      echo "'$1' is not a valid file"
  fi
}

# git clone and cd
# Credit: https://github.com/raineorshine/dotfiles/blob/657f05e/.bashrc#L240-L244
gcl() {
  hub clone $1 &&
  cd $(basename $1)
}

# create a file and any intermediary directories
# Credit: https://gist.github.com/captainsafia/5e9514980a76dba4a20748c79c227f86
touchp() {
  mkdir -p "$(dirname "$1")/" && touch "$1"
}

# open the Xcode workspace or project located in the present directory
xcode() {
  XCODE="Xcode-beta"

  get_first_match() {
    find . -maxdepth 1 -type d -name "$1" | head -1
  }

  open_in_xcode() {
    (
      set -x &&
      open "$1" -a "$XCODE"
    )
  }

  WORKSPACE=$(get_first_match "*.xcworkspace")
  PROJECT=$(get_first_match "*.xcodeproj")

  if [[ -n "${WORKSPACE}" ]]; then
    open_in_xcode "$WORKSPACE"
  elif [[ -n "${PROJECT}" ]]; then
    open_in_xcode "$PROJECT"
  else
    echo "No Xcode workspace or project found in $(PWD)"
    return 1
  fi
}
